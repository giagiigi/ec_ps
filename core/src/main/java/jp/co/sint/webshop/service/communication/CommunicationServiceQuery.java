package jp.co.sint.webshop.service.communication;

import jp.co.sint.webshop.data.DatabaseUtil;
import jp.co.sint.webshop.data.domain.ReviewDisplayType; // 10.1.4 10189 追加
import jp.co.sint.webshop.data.dto.GiftCardIssueHistory;
import jp.co.sint.webshop.data.dto.CustomerCardInfo;
import jp.co.sint.webshop.data.dto.CustomerCardUseInfo;
import jp.co.sint.webshop.data.dto.NewCouponHistoryUseInfo;
import jp.co.sint.webshop.data.dto.OrderDetail;
import jp.co.sint.webshop.data.dto.ReviewPost; // 10.1.4 10189 追加

/**
 * コミュニケーションサービスで使用するクエリを集約したクラス
 * 
 * @author System Integrator Corp.
 */
public final class CommunicationServiceQuery {

  /** default constructor */
  private CommunicationServiceQuery() {
  }

  // キャンペーンに関連付いている受注がないかどうか検索
  public static final String LOAD_CAMPAIGN_ORDER = DatabaseUtil.getSelectAllQuery(OrderDetail.class)
      + " WHERE SHOP_CODE = ? AND CAMPAIGN_CODE = ?";

  // キャンペーンに関連付いている商品の削除
  public static final String DELETE_CAMPAIGN_COMMODITY = "DELETE FROM CAMPAIGN_COMMODITY WHERE SHOP_CODE = ? AND CAMPAIGN_CODE = ?";

  // キャンペーンの削除
  public static final String DELETE_CAMPAIGN = "DELETE FROM CAMPAIGN WHERE SHOP_CODE = ? AND CAMPAIGN_CODE = ?";

  // レビューの削除
  public static final String DELETE_REVIEW = "DELETE FROM REVIEW_POST WHERE REVIEW_ID = ?";

  // 10.1.4 10189 追加 ここから
  // 表示状態のレビュー一覧を取得
  public static final String DISPLAYED_REVIEW_POST_LIST = DatabaseUtil.getSelectAllQuery(ReviewPost.class)
  + " WHERE SHOP_CODE = ? AND COMMODITY_CODE = ? AND REVIEW_DISPLAY_TYPE = " + ReviewDisplayType.DISPLAY.getValue()
  + " ORDER BY REVIEW_CONTRIBUTED_DATETIME DESC";
  // 10.1.4 10189 追加 ここまで
  
  // soukai add yyq 2013/09/13 start
  public static final String DISPLAYED_REVIEW_POST_AND_CUST_LIST = " SELECT RP.*,C.SEX FROM REVIEW_POST RP "
    + " INNER JOIN CUSTOMER C ON C.CUSTOMER_CODE = RP.CUSTOMER_CODE " 
    + " WHERE RP.SHOP_CODE = ? AND RP.COMMODITY_CODE = ? AND RP.REVIEW_DISPLAY_TYPE = " + ReviewDisplayType.DISPLAY.getValue()
    + " ORDER BY RP.REVIEW_CONTRIBUTED_DATETIME DESC";
  // soukai add yyq 2013/09/13 end
  
//soukai add ob 2011/12/31 start
  // 企划使用判断
  public static final String PLAN_USED_COUNT_SEARCH = "SELECT COUNT(OD.ORDER_NO) FROM ORDER_DETAIL OD WHERE OD.SALE_PLAN_CODE = ? " +
  		" OR OD.FEATURED_PLAN_CODE = ? ";
  public static final String TMALL_PLAN_USED_COUNT_SEARCH = "SELECT COUNT(OD.ORDER_NO) FROM TMALL_ORDER_DETAIL OD WHERE OD.SALE_PLAN_CODE = ? " +
	" OR OD.FEATURED_PLAN_CODE = ? ";
  public static final String GET_PLAN_INFO = "SELECT * FROM PLAN P WHERE P.PLAN_TYPE = ? AND P.PLAN_DETAIL_TYPE = ? AND NOW() BETWEEN P.PLAN_START_DATETIME AND P.PLAN_END_DATETIME";
//soukai add ob 2011/12/31 end
  // 2012/11/17 促销对应 ob add start
  public static final String CAMPAIGN_MAIN_COUNT_SEARCH = "SELECT COUNT(CAMPAIGN_CODE) FROM CAMPAIGN_MAIN  WHERE CAMPAIGN_CODE = ? AND NOW() BETWEEN CAMPAIGN_START_DATE and  CAMPAIGN_END_DATE " ;
  // 2012/11/17 促销对应 ob add end
  
  // 2013/04/04 促销对应 ob add start
//  public static final String LOAD_PRIVATE_COUPON_BY_CUSTOMER_CODE_QUERY = "SELECT CH.coupon_issue_no, CH.COUPON_CODE, CH.COUPON_ISSUE_TYPE, CH.COUPON_NAME, CH.COUPON_NAME_EN, CH.COUPON_NAME_JP, " 
//    + " CH.COUPON_PROPORTION, CH.COUPON_AMOUNT, CH.MIN_USE_ORDER_AMOUNT, CH.MAX_USE_ORDER_AMOUNT,"
//    + " CR.APPLICABLE_OBJECTS, CR.BEFORE_AFTER_DISCOUNT_TYPE, CR.related_commodity_flg, CR.COUPON_TYPE " 
//    + " FROM NEW_COUPON_HISTORY CH, NEW_COUPON_RULE CR WHERE CH.COUPON_CODE = CR.COUPON_CODE"
//    + " AND NOW() BETWEEN CH.USE_START_DATETIME AND CH.USE_END_DATETIME AND CH.USE_STATUS = 0 AND CH.coupon_status = 1 AND CH.CUSTOMER_CODE = ? "
//    + " ORDER BY CH.USE_START_DATETIME DESC, CH.USE_END_DATETIME DESC";
  public static final String LOAD_PRIVATE_COUPON_BY_CUSTOMER_CODE_QUERY = "SELECT coupon_issue_no, COUPON_CODE, COUPON_ISSUE_TYPE, COUPON_NAME, COUPON_NAME_EN, COUPON_NAME_JP, " 
    + " COUPON_PROPORTION, COUPON_AMOUNT, MIN_USE_ORDER_AMOUNT, MAX_USE_ORDER_AMOUNT,USE_TYPE "
    + " FROM NEW_COUPON_HISTORY "
    + " WHERE to_char(NOW(),'yyyy-mm-dd')::date BETWEEN to_char(USE_START_DATETIME,'yyyy-mm-dd')::date AND to_char(USE_END_DATETIME,'yyyy-mm-dd')::date AND USE_STATUS = 0 AND coupon_status = 1 AND CUSTOMER_CODE = ?  "
    + " ORDER BY USE_START_DATETIME DESC, USE_END_DATETIME DESC";
  
  public static final String LOAD_NEW_COUPON_HISTORY_QUERY = "SELECT CH.coupon_issue_no, CH.COUPON_CODE, CH.COUPON_ISSUE_TYPE, CH.COUPON_NAME, CH.COUPON_NAME_EN, CH.COUPON_NAME_JP, " 
    + " CH.COUPON_PROPORTION, CH.COUPON_AMOUNT, CH.MIN_USE_ORDER_AMOUNT, CH.MAX_USE_ORDER_AMOUNT, CH.USE_TYPE"
    + " FROM NEW_COUPON_HISTORY CH"
    + " WHERE to_char(NOW(),'yyyy-mm-dd')::date BETWEEN to_char(CH.USE_START_DATETIME,'yyyy-mm-dd')::date AND to_char(CH.USE_END_DATETIME,'yyyy-mm-dd')::date AND CH.USE_STATUS = 0 AND CH.COUPON_STATUS = 1 AND CH.CUSTOMER_CODE = ? AND CH.COUPON_ISSUE_NO = ? ";
  
  public static final String LOAD_USE_COMMODITY_LIST_QUERY = DatabaseUtil.getSelectAllQuery(NewCouponHistoryUseInfo.class)
    + " WHERE coupon_issue_no = ? AND COMMODITY_CODE IS NOT NULL";
  
  public static final String LOAD_BRAND_LIST_QUERY = DatabaseUtil.getSelectAllQuery(NewCouponHistoryUseInfo.class)
    + " WHERE coupon_issue_no = ? AND BRAND_CODE IS NOT NULL";
  
  public static final String LOAD_IMPORT_COMMODITY_TYPE_LIST_QUERY = DatabaseUtil.getSelectAllQuery(NewCouponHistoryUseInfo.class)
    + " WHERE coupon_issue_no = ? AND IMPORT_COMMODITY_TYPE IS NOT NULL";
  
  public static final String GET_BRAND_CODE_QUERY = "SELECT BRAND_CODE FROM COMMODITY_HEADER WHERE COMMODITY_CODE = ? ";
  // 2013/04/04 促销对应 ob add end
  
  //2013/4/1 优惠券对应 ob add start
  //通过顾客编号取得发货信息
  public static final String SHIPPING_HEADER_QUERY = "SELECT * FROM SHIPPING_HEADER "
    + "WHERE CUSTOMER_CODE = ? AND SHIPPING_DATE IS NOT NULL";
  
  //通过发行规则编号获取朋友介绍履历
  public static final String FRIEND_COUPON_ISSUE_HISTORY_QUERY = "SELECT * FROM FRIEND_COUPON_ISSUE_HISTORY "
    + "WHERE FRIEND_COUPON_RULE_NO = ? ";
  //2013/4/1 优惠券对应 ob add end
  //2013/5/10 优惠券对应 ob add start
  public static final String GET_MAIL_COUPON_ISSUE_DETAIL_NO="SELECT COUPON_ISSUE_DETAIL_NO  FROM NEW_COUPON_HISTORY WHERE to_number(COUPON_ISSUE_DETAIL_NO, 'S999999') = "
    + "(SELECT MAX(to_number(COUPON_ISSUE_DETAIL_NO, 'S999999'))  FROM NEW_COUPON_HISTORY)";
  //2013/5/10 优惠券对应 ob add end
  
  //20130724 txw add start
  public static final String GET_PLAN_DETAIL_LIST_BY_PLAN_CODE_QUERY = "SELECT * FROM PLAN_DETAIL WHERE PLAN_CODE = ?";
  
  public static final String GET_PLAN_COMODITY_LIST_BY_PLAN_CODE_QUERY = "SELECT * FROM PLAN_COMMODITY WHERE PLAN_CODE = ?";
  
  public static final String GET_DELETE_DISCOUNT_HEADER_BY_DISCOUNT_CODE_QUERY = "DELETE FROM DISCOUNT_HEADER WHERE DISCOUNT_CODE = ?";
  
  public static final String GET_DELETE_CUSTOMER_MESSAGE_BY_ORM_ROWID_QUERY = "DELETE FROM CUSTOMER_MESSAGE WHERE ORM_ROWID = ?";
  
  public static final String GET_DELETE_DISCOUNT_COMMODITY_BY_DISCOUNT_CODE_QUERY = "DELETE FROM DISCOUNT_COMMODITY WHERE DISCOUNT_CODE = ?";
  
  // 20140926 hdh update start  限时限购活动允许添加组合品
  public static final String GET_DISCOUNT_DETAIL_BY_DISCOUNT_CODE_QUERY = "SELECT DC.RANK_CN,DC.RANK_JP,DC.RANK_EN, "
      + " DC.COMMODITY_CODE, CH.COMMODITY_NAME, CH.SALE_START_DATETIME,"
      + " CH.SALE_END_DATETIME, DC.DISCOUNT_PRICE, DC.CUSTOMER_MAX_TOTAL_NUM, DC.SITE_MAX_TOTAL_NUM,"
      + " DC.USE_FLG, DC.DISCOUNT_DIRECTIONS_CN, DC.DISCOUNT_DIRECTIONS_JP, DC.DISCOUNT_DIRECTIONS_EN,"
      + " CASE WHEN CH.ORIGINAL_COMMODITY_CODE IS NOT NULL "
      + " THEN (SELECT ICD.UNIT_PRICE FROM COMMODITY_DETAIL ICD  WHERE ICD.COMMODITY_CODE=CH.ORIGINAL_COMMODITY_CODE)*CH.COMBINATION_AMOUNT"
      + " ELSE CD.UNIT_PRICE END AS UNIT_PRICE ,"
      + " CASE WHEN CH.ORIGINAL_COMMODITY_CODE IS NOT NULL "
      + " THEN  FLOOR((SELECT ST.STOCK_QUANTITY FROM STOCK ST WHERE ST.COMMODITY_CODE=CH.ORIGINAL_COMMODITY_CODE)/CH.COMBINATION_AMOUNT)"
      + " ELSE S.STOCK_QUANTITY END AS STOCK_QUANTITY "
      + " FROM DISCOUNT_COMMODITY DC"
      + " INNER JOIN COMMODITY_HEADER CH ON DC.COMMODITY_CODE = CH.COMMODITY_CODE"
      + " INNER JOIN COMMODITY_DETAIL CD ON DC.COMMODITY_CODE = CD.COMMODITY_CODE"
      + " INNER JOIN STOCK S ON DC.COMMODITY_CODE = S.COMMODITY_CODE"
      + " WHERE DC.DISCOUNT_CODE = ?";
  // 20140926 hdh update end
  
  public static final String GET_PLAN_ALL_LIST_QUERY = "SELECT * FROM PLAN WHERE NOW() BETWEEN PLAN_START_DATETIME AND PLAN_END_DATETIME";
  
  public static final String LOAD_CATEGORY_LIST_QUERY = DatabaseUtil.getSelectAllQuery(NewCouponHistoryUseInfo.class)
  + " WHERE coupon_issue_no = ? AND CATEGORY_CODE IS NOT NULL";
  //20130724 txw add end
  // 20130724 txw add start
  public static final String GET_DELETE_FREE_POSTAGE_RULE_QUERY = "DELETE FROM FREE_POSTAGE_RULE WHERE FREE_POSTAGE_CODE = ?";
  
  public static final String GET_CUSTOMER_CARD_INFO_LIST_QUERY = DatabaseUtil.getSelectAllQuery(CustomerCardInfo.class)
  + " WHERE ORDER_NO = ? ORDER BY RECHARGE_DATE";
  
  public static final String GET_CUSTOMER_CARD_USE_INFO_LIST_QUERY = DatabaseUtil.getSelectAllQuery(CustomerCardUseInfo.class) + " WHERE CARD_ID = ?";
  
  public static final String GET_DELETE_CUSTOMER_CARD_INFO_QUERY = "DELETE FROM CUSTOMER_CARD_INFO WHERE CARD_ID = ?";
  // 20130724 txw add end

  //20131105 wz add start
  public static final String GIFT_CARD_ISSUE_HISTORY = DatabaseUtil.getSelectAllQuery(GiftCardIssueHistory.class)
  + " WHERE CARD_CODE = ? ORDER BY ISSUE_DATE";
  
  //查询所有密码
  public static final String GIFT_CARD_ISSUE_HISTORY_PWD="SELECT PASS_WORD FROM GIFT_CARD_ISSUE_DETAIL";
  
  public static final String GIFT_CARD_ISSUE_HISTORY_PWD_CANCElFLG = "SELECT CANCEL_FLG,CARD_HISTORY_NO FROM GIFT_CARD_ISSUE_HISTORY WHERE CARD_CODE = ? ";
  
  public static final String GIFT_CARD_ISSUE_HISTORY_UPDATE_CANCELFLG = "UPDATE GIFT_CARD_ISSUE_HISTORY SET CANCEL_FLG = ? WHERE CARD_CODE = ? AND CARD_HISTORY_NO = ?";
  //20131105 wz add end 

  // 20140303 txw add start
  public static final String GET_DELETE_PROPAGANDA_ACTIVITY_RULE_QUERY = "DELETE FROM PROPAGANDA_ACTIVITY_RULE WHERE ACTIVITY_CODE = ?";
  
  public static final String GET_PROPAGANDA_ACTIVITY_COMMODITY_LIST_QUERY = "SELECT"
    + " PAC.COMMODITY_CODE,"
    + " CH.COMMODITY_NAME,"
    + " PAC.PURCHASING_AMOUNT"
    + " FROM PROPAGANDA_ACTIVITY_COMMODITY PAC"
    + " INNER JOIN COMMODITY_HEADER CH ON PAC.COMMODITY_CODE = CH.COMMODITY_CODE"
    + " WHERE ACTIVITY_CODE = ?";
  
  public static final String GET_DELETE_PROPAGANDA_ACTIVITY_COMMODITY_QUERY = "DELETE FROM PROPAGANDA_ACTIVITY_COMMODITY WHERE ACTIVITY_CODE = ? AND COMMODITY_CODE = ?";
  
  public static final String GET_COMMON_PROPAGANDA_ACTIVITY_QUERY = "SELECT *"
    + " FROM PROPAGANDA_ACTIVITY_RULE"
    + " WHERE ORDER_TYPE = ?"
    + " AND LANGUAGE_CODE = ?"
    + " AND (? BETWEEN ACTIVITY_START_DATETIME AND ACTIVITY_END_DATETIME"
    + "   OR ? BETWEEN ACTIVITY_START_DATETIME AND ACTIVITY_END_DATETIME"
    + " OR ACTIVITY_START_DATETIME BETWEEN ? AND ?)"
    + " AND ACTIVITY_CODE != ?";
  // 20140303 txw add end
  
  // 20140416 hdh add start
  public static final String  GET_ISSUE_HISTORY_BY_CUSTOMER_CODE="SELECT" +
  		" * FROM FRIEND_COUPON_ISSUE_HISTORY WHERE CUSTOMER_CODE=? ORDER BY CREATED_DATETIME DESC";
  // 20140416 
  // 20140416 hdh add start
  public static final String GET_OPTIONAL_CAMPAIGN_BY_DATE = "SELECT * FROM " +
      		"OPTIONAL_CAMPAIGN WHERE CAMPAIGN_END_DATE >= ? AND CAMPAIGN_START_DATE <= ? ORDER BY CREATED_DATETIME DESC";
  // 20140416
  
  public static final String GET_ACTIVE_DISCOUNT_HEADER_LIST = " SELECT * FROM " +
  		"DISCOUNT_HEADER WHERE  NOW() BETWEEN  DISCOUNT_START_DATETIME AND DISCOUNT_END_DATETIME ";
  
  public static final String GET_CROSS_DISCOUNT_HEADER_LIST = " SELECT * FROM " +
  		"DISCOUNT_HEADER WHERE DISCOUNT_END_DATETIME >? AND DISCOUNT_START_DATETIME < ? ";
  
  public static final String GET_DISCOUNT_COMMODITY_LIST_BY_COUPON_CODE = " SELECT * FROM " +
  "DISCOUNT_COMMODITY WHERE DISCOUNT_CODE = ? ";
  
  public static final String GET_ORDER_REVIEW_LIST_BY_ORDER_NO_AND_CUSTOMER_CODE = " SELECT OD.COMMODITY_CODE,OD.RETAIL_PRICE ,"
    + " CH.COMMODITY_NAME, CH.COMMODITY_NAME_EN,CH.COMMODITY_NAME_JP, "
    + " OD.COMMODITY_TYPE, OD.SHOP_CODE,CASE WHEN (SELECT COUNT(*)  FROM REVIEW_POST RP WHERE RP.COMMODITY_CODE = OD.COMMODITY_CODE AND RP.CUSTOMER_CODE=?)>0 "
    + " THEN '1'  ELSE  '' END AS   REWARD_ID "
    + " FROM ORDER_DETAIL OD  " 
    +	" INNER JOIN COMMODITY_HEADER CH ON CH.COMMODITY_CODE = OD.COMMODITY_CODE  WHERE OD.ORDER_NO=? ";
  
  
  public static final String EXISTS_FRIEND_COUPON_ISSUE_HISTORY = "SELECT COUNT(*) FROM FRIEND_COUPON_ISSUE_HISTORY"
    + " WHERE FRIEND_COUPON_RULE_NO = ? AND CUSTOMER_CODE = ? ";
  
}
